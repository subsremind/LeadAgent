FROM node:22-alpine AS base
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable

WORKDIR /app

# 安装依赖
RUN apk add --no-cache libc6-compat
RUN apk update

# 复制项目文件
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml tsconfig.json turbo.json ./
COPY config ./config

# 只复制必要的包目录
COPY packages/api ./packages/api
COPY packages/scheduler ./packages/scheduler
COPY packages/logs ./packages/logs
COPY packages/database ./packages/database
COPY packages/utils ./packages/utils
COPY packages/i18n ./packages/i18n
COPY packages/mail ./packages/mail
COPY packages/auth ./packages/auth
COPY packages/ai ./packages/ai

# 安装pnpm并安装依赖
RUN pnpm install --frozen-lockfile

# 构建项目
RUN pnpm turbo run build --filter=@repo/api...

# 创建非root用户
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# 确保packages目录权限正确
RUN chown -R nextjs:nodejs /app/packages

USER nextjs

# 设置环境变量
ENV NODE_ENV production

# 进入项目根目录，确保monorepo工作区解析正常
WORKDIR /app

# 运行api包的tasks命令
CMD ["pnpm", "-F", "@repo/api", "tasks"]